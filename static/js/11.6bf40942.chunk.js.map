{"version":3,"sources":["helpers/commonHelpers.js","components/Spinner.js","components/Home.js"],"names":["API_ENDPOINT","STATE_NAMES","AP","AR","AS","BR","CT","GA","GJ","HR","HP","JH","KA","KL","MP","MH","MN","ML","MZ","NL","OR","PB","RJ","SK","TN","TG","TR","UT","UP","WB","AN","CH","DN","DL","JK","LA","LD","PY","TT","numberFormatter","Intl","NumberFormat","maximumFractionDigits","abbreviateNumber","number","numberCleaned","Math","round","abs","format","floor","STATE_POP","Spinner","className","MapVisulizer","React","lazy","Dashboard","ChartExplorer","TableData","MainContainer","styled","div","Home","theme","useTheme","useState","Data","setData","currentCase","setCurrestcase","ref","useRef","useEffect","updateState","a","url","fetch","data","json","parsedData","isLoaded","mode","console","log","color","palette","type","height","shadowStyle","boxShadow","style","flex","fallback","callbackState","updateData","loadingRef","margin","minHeight"],"mappings":"qGAAA,wIAAO,IAGMA,EAAe,oDAGfC,EAAc,CACzBC,GAAI,iBACJC,GAAI,oBACJC,GAAI,QACJC,GAAI,QACJC,GAAI,eACJC,GAAI,MACJC,GAAI,UACJC,GAAI,UACJC,GAAI,mBACJC,GAAI,YACJC,GAAI,YACJC,GAAI,SACJC,GAAI,iBACJC,GAAI,cACJC,GAAI,UACJC,GAAI,YACJC,GAAI,UACJC,GAAI,WACJC,GAAI,SACJC,GAAI,SACJC,GAAI,YACJC,GAAI,SACJC,GAAI,aACJC,GAAI,YACJC,GAAI,UACJC,GAAI,cACJC,GAAI,gBACJC,GAAI,cACJC,GAAI,8BACJC,GAAI,aACJC,GAAI,2CACJC,GAAI,QACJC,GAAI,oBACJC,GAAI,SACJC,GAAI,cACJC,GAAI,aACJC,GAAI,SAGAC,EAAkB,IAAIC,KAAKC,aAAa,QAAS,CACrDC,sBAAuB,IAIZC,EAAmB,SAACC,GAC/B,IAAMC,EAAgBC,KAAKC,MAAMD,KAAKE,IAAIJ,IAC1C,OAAIC,EAAgB,IAAYN,EAAgBU,OAAOH,KAAKI,MAAMN,IACzDC,GAAiB,KAAOA,EAAgB,IACxCN,EAAgBU,OAAOL,EAAS,KAAO,IACvCC,GAAiB,KAAOA,EAAgB,IACxCN,EAAgBU,OAAOL,EAAS,KAAO,IACvCC,GAAiB,KAAOA,EAAgB,KACxCN,EAAgBU,OAAOL,EAAS,KAAO,KACvCC,GAAiB,MAAQA,EAAgB,KACzCN,EAAgBU,OAAOL,EAAS,MAAQ,OACxCC,GAAiB,KACjBN,EAAgBU,OAAOL,EAAS,MAAQ,YAD5C,GAIMO,EAAY,CACvB,GAAM,OACN,GAAM,SACN,GAAM,QACN,GAAM,SACN,GAAM,UACN,GAAM,QACN,GAAM,SACN,GAAM,OACN,GAAM,SACN,GAAM,QACN,GAAM,SACN,GAAM,SACN,GAAM,QACN,GAAM,SACN,GAAM,SACN,GAAM,SACN,GAAM,SACN,GAAM,OACN,GAAM,MACN,GAAM,SACN,GAAM,UACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,GAAM,QACN,GAAM,SACN,GAAM,QACN,GAAM,SACN,GAAM,SACN,GAAM,OACN,GAAM,SACN,GAAM,SACN,GAAM,QACN,GAAM,UACN,GAAM,SACN,GAAM,W,iCCtGR,yDAGe,SAASC,IACpB,OACI,qBAAKC,UAAU,oBAAf,SACI,sBAAKA,UAAU,aAAf,UAA4B,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,+B,wPCO/GC,EAAeC,IAAMC,MAAK,kBAAM,sEAChCC,EAAYF,IAAMC,MAAK,kBAAM,sEAC7BE,EAAgBH,IAAMC,MAAK,kBAAM,6EAEjCG,EAAYJ,IAAMC,MAAK,kBAAM,6EAG7BI,EAAgBC,IAAOC,IAAV,oNAeJ,SAASC,IACtB,IAAMC,EAAQC,cACd,EAAwBC,mBAAS,CAC/B,UAAY,EACZ,KAAQ,KAFV,mBAAOC,EAAP,KAAaC,EAAb,KAKA,EAAsCF,mBAAS,aAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACMC,EAAMC,iBAAO,MAwBnB,OApBAC,qBAAU,WACR,IAAMC,EAAW,uCAAG,gCAAAC,EAAA,6DACZC,EADY,UACH5E,IADG,+BAED6E,MAAMD,GAFL,cAEdE,EAFc,gBAGKA,EAAKC,OAHV,OAGdC,EAHc,OAIlBZ,EAAQ,CACNa,UAAU,EACVH,KAAME,EACNE,KAAM,QAPU,2CAAH,qDAUjBR,MAEC,IAIHS,QAAQC,IAAIjB,GAIV,qCACE,cAAC,IAAD,CAAYkB,MAA8B,UAAvBrB,EAAMsB,QAAQC,KAAmB,UAAY,UAAWhB,IAAKA,EAAKiB,OAAQ,EAAGC,YAAa,CAAEC,UAAW,4CAC1H,eAAC9B,EAAD,WACE,sBAAK+B,MAAO,CAAEC,KAAM,GAApB,UAEGzB,EAAKc,SACJ,cAAC,WAAD,CAAUY,SAAU,cAAC,IAAD,IAApB,SACE,cAACpC,EAAD,CAAWqC,cAAexB,EAAgBQ,KAAMX,EAAM4B,WAAY3B,EAAS4B,WAAYzB,MAC3E,cAAC,IAAD,IAEfJ,EAAKc,SACJ,cAAC,WAAD,CAAUY,SAAU,cAAC,IAAD,IAApB,SACE,cAACvC,EAAD,CAAcwB,KAAMX,EAAME,YAAaA,MAC3B,cAAC,IAAD,IAEfF,EAAKc,SACJ,cAAC,WAAD,CAAUY,SAAU,cAAC,IAAD,IAApB,SACE,cAAClC,EAAD,CAAWmB,KAAMX,MACL,cAAC,IAAD,OAMlB,sBAAKwB,MAAO,CAAEC,KAAM,GAApB,UACE,qBAAKD,MAAO,CAACM,OAAQ,iBAAiBC,UAAW,WAEhD/B,EAAKc,SACJ,cAAC,WAAD,CAAUY,SAAU,cAAC,IAAD,IAApB,SACE,cAACnC,EAAD,CAAeoB,KAAMX,MACT,cAAC,IAAD","file":"static/js/11.6bf40942.chunk.js","sourcesContent":["export const fetcher = (...args) => fetch(...args).then(res => res.json());\r\n\r\n\r\nexport const API_ENDPOINT = \"https://driptasenapati.github.io/cov19india/data/\";\r\n\r\n\r\nexport const STATE_NAMES = {\r\n  AP: 'Andhra Pradesh',\r\n  AR: 'Arunachal Pradesh',\r\n  AS: 'Assam',\r\n  BR: 'Bihar',\r\n  CT: 'Chhattisgarh',\r\n  GA: 'Goa',\r\n  GJ: 'Gujarat',\r\n  HR: 'Haryana',\r\n  HP: 'Himachal Pradesh',\r\n  JH: 'Jharkhand',\r\n  KA: 'Karnataka',\r\n  KL: 'Kerala',\r\n  MP: 'Madhya Pradesh',\r\n  MH: 'Maharashtra',\r\n  MN: 'Manipur',\r\n  ML: 'Meghalaya',\r\n  MZ: 'Mizoram',\r\n  NL: 'Nagaland',\r\n  OR: 'Odisha',\r\n  PB: 'Punjab',\r\n  RJ: 'Rajasthan',\r\n  SK: 'Sikkim',\r\n  TN: 'Tamil Nadu',\r\n  TG: 'Telangana',\r\n  TR: 'Tripura',\r\n  UT: 'Uttarakhand',\r\n  UP: 'Uttar Pradesh',\r\n  WB: 'West Bengal',\r\n  AN: 'Andaman and Nicobar Islands',\r\n  CH: 'Chandigarh',\r\n  DN: 'Dadra and Nagar Haveli and Daman and Diu',\r\n  DL: 'Delhi',\r\n  JK: 'Jammu and Kashmir',\r\n  LA: 'Ladakh',\r\n  LD: 'Lakshadweep',\r\n  PY: 'Puducherry',\r\n  TT: 'India'\r\n};\r\n\r\nconst numberFormatter = new Intl.NumberFormat('en-IN', {\r\n  maximumFractionDigits: 1,\r\n});\r\n\r\n\r\nexport const abbreviateNumber = (number) => {\r\n  const numberCleaned = Math.round(Math.abs(number));\r\n  if (numberCleaned < 1e3) return numberFormatter.format(Math.floor(number));\r\n  else if (numberCleaned >= 1e3 && numberCleaned < 1e5)\r\n    return numberFormatter.format(number / 1e3) + 'K';\r\n  else if (numberCleaned >= 1e5 && numberCleaned < 1e7)\r\n    return numberFormatter.format(number / 1e5) + 'L';\r\n  else if (numberCleaned >= 1e7 && numberCleaned < 1e10)\r\n    return numberFormatter.format(number / 1e7) + 'Cr';\r\n  else if (numberCleaned >= 1e10 && numberCleaned < 1e14)\r\n    return numberFormatter.format(number / 1e10) + 'K Cr';\r\n  else if (numberCleaned >= 1e14)\r\n    return numberFormatter.format(number / 1e14) + 'L Cr';\r\n};\r\n\r\nexport const STATE_POP = {\r\n  \"AN\": 419978,\r\n  \"AP\": 52883163,\r\n  \"AR\": 1528296,\r\n  \"AS\": 34586234,\r\n  \"BR\": 119461013,\r\n  \"CH\": 1126705,\r\n  \"CT\": 28566990,\r\n  \"DN\": 343709,\r\n  \"DL\": 18345784,\r\n  \"GA\": 1542750,\r\n  \"GJ\": 63907200,\r\n  \"HR\": 27388008,\r\n  \"HP\": 7316708,\r\n  \"JK\": 13635010,\r\n  \"JH\": 37329128,\r\n  \"KA\": 66165886,\r\n  \"KL\": 35330888,\r\n  \"LA\": 279924,\r\n  \"LD\": 64473,\r\n  \"MP\": 82342793,\r\n  \"MH\": 120837347,\r\n  \"MN\": 3008546,\r\n  \"ML\": 2968889,\r\n  \"MZ\": 1205974,\r\n  \"NL\": 1978502,\r\n  \"OR\": 45429399,\r\n  \"PY\": 1375592,\r\n  \"PB\": 29611935,\r\n  \"RJ\": 78230816,\r\n  \"SK\": 610577,\r\n  \"TN\": 38472769,\r\n  \"TG\": 76481545,\r\n  \"TR\": 3673917,\r\n  \"UP\": 237095024,\r\n  \"UT\": 10086292,\r\n  \"WB\": 97694960\r\n}","import React from 'react';\r\nimport \"./Spinner.css\";\r\n\r\nexport default function Spinner() {\r\n    return (\r\n        <div className=\"spinner_container\">\r\n            <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef, Suspense } from 'react';\r\nimport styled from 'styled-components';\r\nimport LoadingBar from 'react-top-loading-bar'\r\nimport \"./Home.css\";\r\n// import TableData from './TableData';\r\n// import DataController from './DataController';\r\n// import Dashboard from './Dashboard';\r\nimport { useTheme } from '@material-ui/styles';\r\n// import ChartExplorer from './ChartExplorer';\r\nimport Spinner from './Spinner';\r\n// import MapVisulizer from './MapVisulizer';\r\nimport { API_ENDPOINT } from \"./../helpers/commonHelpers\";\r\n\r\nconst MapVisulizer = React.lazy(() => import(\"./MapVisulizer.js\"));\r\nconst Dashboard = React.lazy(() => import(\"./Dashboard.js\"));\r\nconst ChartExplorer = React.lazy(() => import(\"./ChartExplorer.js\"));\r\nconst DataController = React.lazy(() => import(\"./DataController.js\"));\r\nconst TableData = React.lazy(() => import(\"./TableData.js\"));\r\n\r\n\r\nconst MainContainer = styled.div`\r\n  display:flex;\r\n  justify-content:space-between;\r\n  width: 80vw;\r\n  margin: auto;\r\n  @media only screen and (max-width: 1000px) {\r\n    flex-direction: column;\r\n    width: 95vw;\r\n  }\r\n`;\r\n\r\n\r\n\r\n\r\n\r\nexport default function Home() {\r\n  const theme = useTheme();\r\n  const [Data, setData] = useState({\r\n    \"isLoaded\": false,\r\n    \"data\": []\r\n  });\r\n\r\n  const [currentCase, setCurrestcase] = useState('confirmed');\r\n  const ref = useRef(null);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const updateState = async () => {\r\n      const url = `${API_ENDPOINT}india_current.json`;\r\n      let data = await fetch(url);\r\n      let parsedData = await data.json();\r\n      setData({\r\n        isLoaded: true,\r\n        data: parsedData,\r\n        mode: \"cum\"\r\n      })\r\n    }\r\n    updateState();\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n\r\n\r\n  console.log(Data);\r\n\r\n\r\n  return (\r\n    <>\r\n      <LoadingBar color={theme.palette.type === \"light\" ? \"#3b3b3b\" : \"#03ad69\"} ref={ref} height={3} shadowStyle={{ boxShadow: \"10px 10px 21px 0px rgba(59,59,59,0.36)\" }} />\r\n      <MainContainer>\r\n        <div style={{ flex: 1 }}>\r\n\r\n          {Data.isLoaded ?\r\n            <Suspense fallback={<Spinner />}>\r\n              <Dashboard callbackState={setCurrestcase} data={Data} updateData={setData} loadingRef={ref} />\r\n            </Suspense> : <Spinner />}\r\n\r\n          {Data.isLoaded ?\r\n            <Suspense fallback={<Spinner />}>\r\n              <MapVisulizer data={Data} currentCase={currentCase} />\r\n            </Suspense> : <Spinner />}\r\n\r\n          {Data.isLoaded ?\r\n            <Suspense fallback={<Spinner />}>\r\n              <TableData data={Data} />\r\n            </Suspense> : <Spinner />}\r\n\r\n\r\n\r\n\r\n        </div>\r\n        <div style={{ flex: 1 }}>\r\n          <div style={{margin: \"50px auto 30px\",minHeight: \"200px\"}}></div>\r\n\r\n          {Data.isLoaded ?\r\n            <Suspense fallback={<Spinner />}>\r\n              <ChartExplorer data={Data} />\r\n            </Suspense> : <Spinner />}\r\n\r\n\r\n\r\n        </div>\r\n      </MainContainer>\r\n    </>\r\n  )\r\n}\r\n"],"sourceRoot":""}