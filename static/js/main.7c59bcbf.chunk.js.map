{"version":3,"sources":["components/SwitchToggle.js","components/Navbar.js","components/globalStyles.js","App.js","Themes/DarkThemeHandler.js","reportWebVitals.js","index.js"],"names":["SwitchToggle","props","theme","useTheme","className","type","onChange","toggle","palette","mode","checked","Tooltip","title","disableInteractive","style","color","Div","styled","div","Navbar","callback","GlobalStyle","window","localStorage","getItem","createGlobalStyle","Home","React","lazy","App","useState","setTheme","setThemeHandler","setItem","useEffect","localTheme","DarkThemeHandler","MuiTheme","createTheme","background","paper","ThemeProvider","Paper","minHeight","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAOe,SAASA,EAAaC,GACjC,IAAMC,EAAQC,cAKd,OACI,qBAAKC,UAAU,kBAAf,SACI,wBAAOA,UAAU,SAAjB,UACI,uBAAOC,KAAK,WAAWC,SANpB,WACXL,EAAMM,OAA8B,UAAvBL,EAAMM,QAAQH,KAAmB,CAAEI,KAAM,QAAW,CAAEA,KAAM,WAKxBC,QAAgC,UAAvBR,EAAMM,QAAQH,OAChE,cAACM,EAAA,EAAD,CAASC,MAA8B,UAAvBV,EAAMM,QAAQH,KAAmB,YAAc,aAAcQ,oBAAkB,EAA/F,SACI,sBAAMT,UAAU,eAAe,YAAkC,UAAvBF,EAAMM,QAAQH,KAAmB,SAAW,SAClFS,MAAO,CAAEC,MAA8B,UAAvBb,EAAMM,QAAQH,KAAmB,QAAU,oBCZnF,IAAMW,EAAMC,IAAOC,IAAV,8mBACI,SAAAjB,GAAK,MAAiC,UAA7BA,EAAMC,MAAMM,QAAQH,KAAkB,UAAY,WAEhD,SAAAJ,GAAK,MAAiC,UAA7BA,EAAMC,MAAMM,QAAQH,KAAkB,QAAU,aAuBlE,SAASc,EAAOlB,GAC3B,IAAMC,EAAQC,cAKd,OACI,mCACA,eAACa,EAAD,CAAKd,MAASA,EAAd,oBACW,sBAAMY,MAAS,CAACC,MAAO,aAAvB,mBACP,cAACf,EAAD,CAAcO,OAPL,SAACL,GACdD,EAAMmB,SAASlB,W,oCClBRmB,GAjBEC,OAAOC,aAAaC,QAAQ,SAEzBC,YAAH,6NAMC,SAAAxB,GAAK,MAAoB,UAAhBA,EAAMC,MAAoB,UAAY,aAK/C,SAAAD,GAAK,MAAoB,UAAhBA,EAAMC,MAAoB,QAAU,cCHzDwB,EAAOC,IAAMC,MAAK,kBAAM,yDAyCfC,MArCf,WACE,MCdK,WACH,MAA0BC,mBAAS,CAC/BrB,KAAM,UADV,mBAAOP,EAAP,KAAc6B,EAAd,KAKMC,EAAkB,SAAC9B,GACrBoB,OAAOC,aAAaU,QAAQ,QAAQ/B,EAAMO,MAC1CsB,EAAS7B,IAUb,OAPAgC,qBAAU,WACN,IAAIC,EAAab,OAAOC,aAAaC,QAAQ,SAE7CQ,EADQG,EAAa,CAAC1B,KAAM0B,GAAcjC,KAG3C,IAEI,CAAEA,EAAM8B,GDJgBI,GAAjC,mBAAOlC,EAAP,KAAc8B,EAAd,KAOMK,EAAWC,YAAY,CAC3B9B,QAAS,CACPH,KAAqB,UAAfH,EAAMO,KAAmB,QAAU,OACzC8B,WAAY,CACVC,MAAsB,UAAftC,EAAMO,KAAmB,QAAU,cAKhD,OACE,mCACE,cAACgC,EAAA,EAAD,CAAevC,MAAOmC,EAAtB,SACE,eAACK,EAAA,EAAD,CAAO5B,MAAO,CAAE6B,UAAW,SAA3B,UACE,cAAC,EAAD,CAAazC,MAAOA,EAAMO,OAC1B,cAACU,EAAD,CAAQC,SAlBM,SAAClB,GACrB8B,EAAgB9B,MAkBV,cAAC,WAAD,CAAU0C,SAAU,wBAApB,SACE,cAAClB,EAAD,cE5BGmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7c59bcbf.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./SwitchTogglerCSS.css\";\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { useTheme } from '@material-ui/styles';\r\n\r\n\r\n\r\nexport default function SwitchToggle(props) {\r\n    const theme = useTheme()\r\n\r\n    const toggle = () => {\r\n        props.toggle(theme.palette.type === \"light\" ? { mode: \"dark\" } : { mode: \"light\" })\r\n    }\r\n    return (\r\n        <div className=\"SwitchContainer\">\r\n            <label className=\"switch\">\r\n                <input type=\"checkbox\" onChange={toggle} checked={theme.palette.type === \"light\" ? false : true}/>\r\n                <Tooltip title={theme.palette.type === \"light\" ? \"Dark Mode\" : \"Light Mode\"} disableInteractive>\r\n                    <span className=\"slider round\" data-icon={theme.palette.type === \"light\" ? \"\\uf186\" : \"\\uf185\"}\r\n                        style={{ color: theme.palette.type === \"light\" ? \"black\" : \"#e69d00\" }}></span>\r\n                </Tooltip>\r\n\r\n            </label>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styled  from 'styled-components';\r\nimport SwitchToggle from './SwitchToggle';\r\n//import { useTheme } from 'styled-components';\r\nimport { useTheme } from '@material-ui/styles';\r\n\r\n\r\nconst Div = styled.div`\r\n    color: ${props => props.theme.palette.type === \"light\"? \"#161625\" : \"white\"};\r\n    height: 10vh;\r\n    background-color: ${props => props.theme.palette.type === \"light\"? \"white\" : \"#161625\"};\r\n    text-align: center;\r\n    font-size: 1.5em;\r\n    font-weight: 500;\r\n    letter-spacing: 1px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 0px 0px 10px 10px;\r\n    box-shadow: -4px 10px 33px -10px rgba(4,63,117,0.75);\r\n    -webkit-box-shadow: -4px 10px 33px -10px rgba(4,63,117,0.75);\r\n    -moz-box-shadow: -4px 10px 33px -10px rgba(4,63,117,0.75);\r\n    position: relative;\r\n\r\n    @media (max-width: 768px) {\r\n        justify-content: left;\r\n        padding-left: 20px;\r\n    }\r\n`;\r\n\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n    const theme = useTheme()\r\n\r\n    const getTheme = (theme) => {\r\n        props.callback(theme);\r\n    }\r\n    return (\r\n        <>\r\n        <Div theme = {theme}>\r\n            Covid19<span style = {{color: \"chocolate\"}}>India</span>\r\n            <SwitchToggle toggle = {getTheme}/>\r\n        </Div>\r\n        \r\n        </>\r\n    )\r\n}\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nlet localTheme = window.localStorage.getItem(\"Theme\");\r\n \r\nconst GlobalStyle = createGlobalStyle`\r\n::-webkit-scrollbar {\r\n    width: 7px;\r\n  }\r\n  \r\n  ::-webkit-scrollbar-thumb {\r\n    background: ${props => props.theme === \"light\" ? \"#b3b3b3\" : \"#7d8fba\"};\r\n    border-radius: 10px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-track {\r\n    background: ${props => props.theme === \"light\" ? \"white\" : \"#141431\"};\r\n  }\r\n`;\r\n \r\nexport default GlobalStyle;","import React, { Suspense } from 'react';\nimport Navbar from \"./components/Navbar\";\n// import { createGlobalStyle, ThemeProvider } from \"styled-components\"\nimport { ThemeProvider } from \"@material-ui/styles\";\n// import Home from \"./components/Home\";\nimport { createTheme } from '@material-ui/core/styles';\n//import indiaData from \"./data/india_state.json\";\nimport { DarkThemeHandler } from \"./Themes/DarkThemeHandler\";\nimport { Paper } from \"@material-ui/core\";\nimport GlobalStyle from './components/globalStyles';\n\n\nconst Home = React.lazy(() => import(\"./components/Home.js\"));\n\n\n\nfunction App() {\n  const [theme, setThemeHandler] = DarkThemeHandler();\n\n\n  const themeCallback = (theme) => {\n    setThemeHandler(theme);\n  };\n\n  const MuiTheme = createTheme({\n    palette: {\n      type: theme.mode === \"light\" ? \"light\" : \"dark\",\n      background: {\n        paper: theme.mode === \"light\" ? \"white\" : \"#141431\",\n      }\n    }\n  })\n\n  return (\n    <>\n      <ThemeProvider theme={MuiTheme}>\n        <Paper style={{ minHeight: \"100vh\" }}>\n          <GlobalStyle theme={theme.mode}/>\n          <Navbar callback={themeCallback} />\n          <Suspense fallback={<div/>}>\n            <Home />\n          </Suspense>\n\n        </Paper>\n\n\n      </ThemeProvider>\n\n\n    </>\n  );\n}\n\nexport default App;\n","import { useState,useEffect } from \"react\";\r\n\r\n\r\nexport function DarkThemeHandler(){\r\n    const [theme, setTheme] = useState({\r\n        mode: 'light'\r\n    });\r\n\r\n\r\n    const setThemeHandler = (theme) => {\r\n        window.localStorage.setItem('Theme',theme.mode);\r\n        setTheme(theme);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let localTheme = window.localStorage.getItem(\"Theme\");\r\n        var t = localTheme ? {mode: localTheme} : theme;\r\n        setThemeHandler(t)\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return [ theme,setThemeHandler ];\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}