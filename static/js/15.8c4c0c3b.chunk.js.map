{"version":3,"sources":["components/Cell.js","helpers/csvExport.js","Themes/TableTheme.js","components/Table.js","components/TableTools.js","components/TableData.js"],"names":["Cell","data","tagName","inc","incData","toLowerCase","find","s","Inc","number","useSpring","from","Math","floor","delay","config","molasses","styles","textColor","div","style","color","getIncDiv","to","n","toFixed","exportCSVFile","headers","items","fileTitle","unshift","console","log","csv","objArray","array","JSON","parse","str","i","length","line","index","convertToCSV","stringify","exportedFilenmae","blob","Blob","type","navigator","msSaveBlob","link","document","createElement","undefined","download","url","URL","createObjectURL","setAttribute","visibility","body","appendChild","click","removeChild","Export","formatData","map","item","props","ret","formatHead","ix","title","frmData","frmHead","prepareData","ComponentThemes","Table","light","headerStyleColor","rowHeadColor","backgroundPaper","oddColor","dark","columns","theme","useTheme","curTheme","palette","propsAn","opacity","y","slow","themeT","createTheme","overrides","MuiTableRow","root","cursor","MuiTableCell","head","backgroundColor","borderBottom","fontSize","MuiPaper","elevation2","boxShadow","MuiTableBody","background","paper","width","margin","padding","window","innerWidth","ThemeProvider","options","tableLayout","isLoading","paging","headerStyle","borderRadius","exportButton","exportCsv","onRowClick","evt","rowData","alert","getValProps","TableTools","Data","IncData","stateData","useState","tableData","setTableData","useEffect","callback","Object","keys","key","res","field","cellStyle","position","left","textAlign","render","Tooltip","CODE","placement","disableInteractive","filtering","customSort","a","b","filter","element","dataT","res_data","entries","k","v","isLoaded","generateTableData","Spinner","memo","TableData","className","mode","Map"],"mappings":"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","file":"static/js/15.8c4c0c3b.chunk.js","sourcesContent":["import React from 'react';\r\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded';\r\nimport { animated, config, useSpring } from 'react-spring';\r\n\r\nexport default function Cell({ data,tagName,incData }) {\r\n    var objData = incData[tagName.toLowerCase()].find(s => s[\"STATE/UT\"] === data[\"STATE/UT\"]);\r\n    var inc = objData.Inc;\r\n\r\n    const { number } = useSpring({\r\n        from: { number: Math.floor(data[tagName] / 2) },\r\n        number: data[tagName],\r\n        delay: 200,\r\n        config: config.molasses\r\n      })\r\n\r\n\r\n    const styles = {\r\n        'recovered':{\r\n            textColor: \"#6fe871\"\r\n        },\r\n        \"confirmed\":{\r\n            textColor: \"#ff5454\"\r\n        },\r\n        \"deceased\":{\r\n            textColor: \"#606060\"\r\n        }\r\n    }\r\n\r\n    const getIncDiv = () => {\r\n        var div;\r\n        switch (tagName.toLowerCase()) {\r\n            case \"confirmed\":\r\n                div = <div style = {{color : `${styles.confirmed.textColor}`}}>{inc > 0 && <><ArrowUpwardRoundedIcon/>{inc}</>}</div>\r\n                break;\r\n            case \"recovered\":\r\n                div = <div style = {{color : `${styles.recovered.textColor}`}}>{inc > 0 && <><ArrowUpwardRoundedIcon/>{inc}</>}</div>\r\n                break;\r\n            case \"deceased\":\r\n                div = <div style = {{color : `${styles.deceased.textColor}`}}>{inc > 0 && <><ArrowUpwardRoundedIcon/>{inc}</>}</div>\r\n                break;\r\n            default:\r\n                div = <div style = {{color : `${styles.confirmed.textColor}`}}>{inc > 0 && <><ArrowUpwardRoundedIcon/>{inc}</>}</div>\r\n                break;\r\n        }\r\n        return div;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {getIncDiv()}\r\n            <animated.div>{number.to(n => n.toFixed(0))}</animated.div>\r\n        </div>\r\n    )\r\n}\r\n","function convertToCSV(objArray) {\r\n    var array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\r\n    var str = '';\r\n\r\n    for (var i = 0; i < array.length; i++) {\r\n        var line = '';\r\n        for (var index in array[i]) {\r\n            if (line !== '') line += ','\r\n\r\n            line += array[i][index];\r\n        }\r\n\r\n        str += line + '\\r\\n';\r\n    }\r\n\r\n    return str;\r\n}\r\n\r\nfunction exportCSVFile(headers, items, fileTitle) {\r\n    if (headers) {\r\n        items.unshift(headers);\r\n    }\r\n    console.log(items);\r\n    // Convert Object to JSON\r\n    var jsonObject = JSON.stringify(items);\r\n\r\n    var csv = convertToCSV(jsonObject);\r\n\r\n    var exportedFilenmae = fileTitle + '.csv' || 'export.csv';\r\n\r\n    var blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\r\n    if (navigator.msSaveBlob) { // IE 10+\r\n        navigator.msSaveBlob(blob, exportedFilenmae);\r\n    } else {\r\n        var link = document.createElement(\"a\");\r\n        if (link.download !== undefined) { // feature detection\r\n            // Browsers that support HTML5 download attribute\r\n            var url = URL.createObjectURL(blob);\r\n            link.setAttribute(\"href\", url);\r\n            link.setAttribute(\"download\", exportedFilenmae);\r\n            link.style.visibility = 'hidden';\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst getValProps = (props) => {\r\n    var COUNT = props.data[props.tagName];\r\n    return COUNT\r\n}\r\n\r\n\r\nconst prepareData = (headers,data) => {\r\n    var formatData = data.map((item) => {\r\n        var ret = {};\r\n        for(var i in item){\r\n            if(i !== \"tableData\"){\r\n                if(typeof(item[i]) === 'object'){\r\n                    ret[i] = getValProps(item[i].props);\r\n                }else{\r\n                    ret[i] = item[i]\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    })\r\n\r\n    var formatHead = {}\r\n    for(var ix = 0; ix < headers.length; ix++){\r\n        formatHead[ix] = headers[ix].title;\r\n    }\r\n\r\n    console.log(formatHead);\r\n    return ({\r\n        frmData: formatData,\r\n        frmHead: formatHead\r\n    })\r\n}\r\n\r\nexport default function Export(headers,data,fileTitle){\r\n    var formatData = prepareData(headers,data);\r\n\r\n    exportCSVFile(formatData.frmHead,formatData.frmData,fileTitle);\r\n}\r\n","export const ComponentThemes = {\r\n    Table: {\r\n        light:{\r\n            headerStyleColor: \"#f3f3f3\",\r\n            rowHeadColor: \"#f3f3f3\",\r\n            backgroundPaper: \"white\",\r\n            oddColor: \"#ebebeb\"\r\n        },\r\n        dark:{\r\n            headerStyleColor: \"#242c52\",\r\n            rowHeadColor: \"#242c52\",\r\n            backgroundPaper: \"transparent\",\r\n            oddColor: \"#1d2c45\"\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { useTheme,ThemeProvider } from '@material-ui/styles';\r\nimport MaterialTable from 'material-table';\r\nimport { createTheme } from '@material-ui/core/styles';\r\nimport \"./Table.css\";\r\nimport Export from './../helpers/csvExport';\r\nimport {ComponentThemes} from \"./../Themes/TableTheme\";\r\nimport { animated,config,useSpring } from 'react-spring';\r\n\r\n\r\n\r\n\r\n\r\nexport default function Table({ columns, data }) {\r\n    const theme = useTheme()\r\n    console.log(\"Main Table Rendered\");\r\n    var curTheme = ComponentThemes.Table[theme.palette.type];\r\n    const propsAn = useSpring({ to: { opacity: 1,y: 0 }, from: { opacity: 0,y: 100 },delay: 500,config: {\r\n        ...config.slow\r\n    } })\r\n\r\n    const themeT = createTheme({\r\n        overrides: {\r\n            MuiTableRow: {\r\n                root: {\r\n                    '&.MuiTableRow-hover:hover': {\r\n                        cursor: 'pointer'\r\n                        // '& .MuiTableCell-body': {\r\n                        //     backgroundColor: \"#d1f4ff\"\r\n                        // }\r\n                    }\r\n    \r\n                }\r\n            },\r\n            MuiTableCell: {\r\n                head: {\r\n                    backgroundColor: `${curTheme.headerStyleColor} !important`\r\n                },\r\n                root: {\r\n                    '& .MuiTableCell-body:first-child':{\r\n                        backgroundColor: `${curTheme.rowHeadColor} !important`\r\n                    },\r\n                    borderBottom: \"transparent\",\r\n                    fontSize: \"12px !important\"\r\n                }\r\n            },\r\n            MuiPaper: {\r\n                elevation2: {\r\n                    boxShadow: \"none !important\"\r\n                }\r\n            },\r\n            MuiTableBody: {\r\n                root: {\r\n                    '& tr:nth-of-type(even)':{\r\n                        backgroundColor: `${curTheme.oddColor} !important`\r\n                    }\r\n                }\r\n            }\r\n            \r\n        },\r\n        palette: {\r\n            type: theme.palette.type,\r\n            background: {\r\n                paper: curTheme.backgroundPaper,\r\n            }\r\n        }\r\n        \r\n    })\r\n    \r\n    return (\r\n        <animated.div style={{ width: '98%', margin: \"auto\", padding: `${window.innerWidth < 1000 ? \"0px\" : \"10px\"}`,...propsAn }}>\r\n            \r\n            <ThemeProvider theme={themeT}>\r\n                <MaterialTable\r\n                    title=\"Corona Table\"\r\n                    columns={columns}\r\n                    data={data}\r\n                    options={{\r\n                        tableLayout: \"fixed\",\r\n                        isLoading: true,\r\n                        paging: false,\r\n                        headerStyle: {\r\n                            borderRadius: \"10px\",\r\n                            margin: \"10px\",\r\n                        },\r\n                        exportButton: { csv: true },\r\n                        exportCsv: (columns, data) => {\r\n                            Export(columns, data, \"export\");\r\n                        }\r\n                    }}\r\n                    onRowClick={(evt, rowData) => {\r\n                        console.log(rowData);\r\n                        alert(\"clicked\");\r\n                    }}\r\n                    style={{\r\n                        padding: \"10px\",\r\n                        borderRadius: \"20px\"\r\n                    }}\r\n                />\r\n            </ThemeProvider>\r\n\r\n        </animated.div>\r\n\r\n    )\r\n}\r\n","import React, { useState, memo,useEffect } from 'react'\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Cell from './Cell';\r\nimport Table from './Table';\r\nimport Spinner from './Spinner';\r\n\r\n// const EnvEndPoints = process.env;\r\n\r\n// const toTitleCase = (str) => {\r\n//     return str.replace(\r\n//         /\\w\\S*/g,\r\n//         function (txt) {\r\n//             return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n//         }\r\n//     );\r\n// }\r\n\r\nconst getValProps = (props) => {\r\n    var COUNT = props.data[props.tagName];\r\n    return COUNT\r\n}\r\n\r\n// const generateStatewiseCumData = (data, callback) => {\r\n//     var columns = []\r\n//     var dataT = []\r\n//     var cols = Object.keys(data).map((item) => {\r\n//         return (\r\n//             toTitleCase(item)\r\n//         )\r\n//     });\r\n//     columns.push({\r\n//         \"title\": \"STATE/UT\",\r\n//         field: \"STATE/UT\",\r\n//         cellStyle: {\r\n//             // backgroundColor: ComponentThemes.Table[theme.palette.type].rowHeadColor,\r\n//             borderRadius: \"10px\",\r\n//             position: \"sticky\",\r\n//             left: 0,\r\n//             textAlign: \"center\"\r\n//         },\r\n//         render: rowData => {\r\n//             return <Tooltip title={`Click to see details for ${rowData.id}`} placement=\"top-start\" disableInteractive><div>{rowData[\"STATE/UT\"]}</div>\r\n//             </Tooltip>\r\n//         }\r\n//     })\r\n//     cols.forEach((item) => {\r\n//         columns.push({\r\n//             title: ` ${item}`,\r\n//             field: `${item}`,\r\n//             cellStyle: {\r\n//                 borderRadius: \"10px\",\r\n//                 textAlign: \"center\",\r\n//             },\r\n//             filtering: false,\r\n//             customSort: (a, b) => getValProps(a[item].props) - getValProps(b[item].props)\r\n//         })\r\n//     })\r\n//     var states = data.confirmed.map((item) => {\r\n//         return (\r\n//             item[\"STATE/UT\"]\r\n//         )\r\n//     })\r\n//     for (let i = 0; i < states.length; i++) {\r\n//         var temp_r = {};\r\n//         for (let j = 0; j < columns.length; j++) {\r\n//             if (columns[j].field === \"STATE/UT\") {\r\n//                 temp_r[columns[j].field] = states[i];\r\n//             } else {\r\n//                 temp_r[columns[j].field] = <Cell data={data} tagName={columns[j].field.toLowerCase()} stateName={states[i]} />;\r\n//             }\r\n//         }\r\n//         // eslint-disable-next-line\r\n//         dataT.push({ ...temp_r, id: `${data.confirmed.find(s => s[\"STATE/UT\"] === temp_r[\"STATE/UT\"]).CODE}` });\r\n//     }\r\n//     dataT = dataT.sort((a, b) => (getValProps(a.Confirmed.props) > getValProps(b.Confirmed.props)) ? -1 : ((getValProps(b.Confirmed.props) > getValProps(a.Confirmed.props)) ? 1 : 0))\r\n//     callback({\r\n//         columns: columns,\r\n//         data: dataT\r\n//     })\r\n// }\r\n\r\n\r\nconst generateTableData = (data, callback, incData = null) => {\r\n\r\n    var columns = Object.keys(data[0]).map((key) => {\r\n        var res;\r\n        if (key !== \"CODE\") {\r\n\r\n            if (key === \"STATE/UT\") {\r\n                res = {\r\n                    title: key,\r\n                    field: key,\r\n                    cellStyle: {\r\n                        borderRadius: \"10px\",\r\n                        position: \"sticky\",\r\n                        left: 0,\r\n                        textAlign: \"center\"\r\n                    },\r\n                    render: rowData => {\r\n                        return (\r\n                            <Tooltip title={`Click to see details for ${rowData.CODE}`} placement=\"top-start\" disableInteractive><div>{rowData[\"STATE/UT\"]}</div>\r\n                            </Tooltip>\r\n                        )\r\n                    }\r\n                }\r\n            } else {\r\n                res = {\r\n                    title: key,\r\n                    field: key,\r\n                    cellStyle: {\r\n                        borderRadius: \"10px\",\r\n                        textAlign: \"center\",\r\n                    },\r\n                    filtering: false,\r\n                    customSort: (a, b) => getValProps(a[key].props) - getValProps(b[key].props)\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    })\r\n\r\n    columns = columns.filter(function (element) {\r\n        return element !== undefined;\r\n    });\r\n\r\n    data = data.filter(function (element) {\r\n        return element[\"STATE/UT\"] !== \"Total\";\r\n    });\r\n\r\n    var dataT = incData ? data.map((key) => {\r\n        const res_data = {}\r\n\r\n        for (const [k, v] of Object.entries(key)) {\r\n            if (k !== \"STATE/UT\" && k !== \"CODE\") {\r\n                res_data[k] = <Cell data={key} tagName={k} incData={incData} />\r\n            } else {\r\n                res_data[k] = v\r\n            }\r\n        }\r\n\r\n        return res_data;\r\n    }) : data;\r\n    callback({\r\n        isLoaded: true,\r\n        columns: columns,\r\n        data: dataT\r\n    })\r\n}\r\n\r\n\r\nfunction TableTools({ Data, IncData }) {\r\n    // const [stateData, setStateData] = useState({\r\n    //     \"isLoaded\": false,\r\n    //     \"data\": {}\r\n    // });\r\n    const stateData = Data;\r\n    const [tableData, setTableData] = useState({\r\n        \"isLoaded\": false\r\n    })\r\n\r\n    console.log(\"Table Rendered\");\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const updateState = async () => {\r\n    //         const url = `${EnvEndPoints.REACT_APP_API}/${EnvEndPoints.REACT_APP_STATEWISECUM}`;\r\n    //         let data = await fetch(url);\r\n    //         let parsedData = await data.json();\r\n    //         setStateData({ ...stateData, data: parsedData, isLoaded: true });\r\n    //     }\r\n    //     updateState();\r\n    //     // eslint-disable-next-line\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        const updateTableData = () => {\r\n            generateTableData(stateData, setTableData, IncData);\r\n\r\n        }\r\n        updateTableData();\r\n        // eslint-disable-next-line\r\n    }, [stateData])\r\n\r\n    return (\r\n        <div>\r\n\r\n            {tableData.isLoaded ? <Table columns={tableData.columns} data={tableData.data} /> : <Spinner />}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default memo(TableTools);\r\n","import React,{ memo } from 'react'\r\nimport TableTools from './TableTools';\r\n\r\n// const TableTools = React.lazy(() => import(\"./TableTools.js\"));\r\n\r\nfunction TableData(props) {\r\n    const {data} = props;\r\n    return (\r\n        <div className={props.className}>\r\n\r\n                <TableTools Data={data.data.Table[data.mode]} IncData={data.data.Map[data.mode]}/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(TableData);"],"sourceRoot":""}